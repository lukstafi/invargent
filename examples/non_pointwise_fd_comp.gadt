datatype FunDesc : type * type
datacons FDI : ∀a. FunDesc (a, a)
datacons FDC : ∀a, b. b ⟶ FunDesc (a, b)
datacons FDG : ∀a, b. (a → b) ⟶ FunDesc (a, b)

external fd_fun : ∀a, b. FunDesc (a, b) → a → b

let fd_comp fd1 fd2 =
  let o f g x = f (g x) in
  match fd1 with
    | FDI ->
      (match fd2 with | FDI -> fd2 | FDC _ -> fd2 | FDG _ -> fd2)
    | FDC b -> 
      (match fd2 with
        | FDI -> fd1
        | FDC c -> FDC (fd_fun fd2 b)
        | FDG g -> FDC (fd_fun fd2 b))
    | FDG f ->
      (match fd2 with
        | FDI -> fd1
        | FDC c -> FDC c
        | FDG g -> FDG (o (fd_fun fd2) f))
