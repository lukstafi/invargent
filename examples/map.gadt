newtype List : type * num
newtype Foo
newtype Bar

external f : Foo → Bar

newcons LNil : for all a: List(a, 0)
newcons LCons : ∀n, a. a * List(a, n) ⟶ List(a, n+1)

let rec map =
  function LNil -> LNil
    | LCons (x, l) -> LCons (f x, map l)
