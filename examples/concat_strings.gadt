newtype List : type * num
newcons LNil : ∀a. List(a, 0)
newcons LCons : ∀n, a [0≤n]. a * List(a, n) ⟶ List(a, n+1)
external let append : String → String → String = "(^)"

let rec concat =
  function LNil -> ""
    | LCons (x, LNil) -> x
    | LCons (x, xs) -> append x (append ", " (concat xs))
