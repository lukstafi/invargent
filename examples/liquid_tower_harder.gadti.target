datatype Array : type * num

external val array_make : ∀n, a[0 ≤ n]. Num n → a → Array (a, n)

external val array_get :
   ∀n, k, a[0 ≤ k ∧ k + 1 ≤ n]. Array (a, n) → Num k → a

external val array_set :
   ∀n, k, a[0 ≤ k ∧ k + 1 ≤ n]. Array (a, n) → Num k → a → ()

external val array_length : ∀n, a[0 ≤ n]. Array (a, n) → Num n

external val n2i : ∀n. Num n → Int

external val equal : ∀a. a → a → Bool

external val leq : ∀a. a → a → Bool

external val print : String → ()

external val string_make : Int → String → String

external val string_of_int : Int → String

external val abs : Int → Int

external val minus : Int → Int → Int

external val plus : Int → Int → Int

external val int0 : Int

val initialize : ∀k, n[n ≤ k + 1]. Array (Int, k) → Num n → ()

val showpiece : Int → Int → ()

val showposts :
   ∀i, k, n[i ≤ n + 1 ∧ i ≤ k + 1 ∧ 0 ≤ i].
   Array (Int, i) → Array (Int, k) → Array (Int, n) → ()

val move :
   ∀i, j, k, n[n ≤ m ∧ k ≤ m ∧ i + j ≤ m ∧ i + 1 ≤ m ∧
   j ≤ k ∧ j ≤ n + 1 ∧ 0 ≤ i ∧ 1 ≤ k].
   Num j → Array (Int, m) → Num i → Array (Int, m) →
     Num k → Array (Int, m) → Num n → ()
