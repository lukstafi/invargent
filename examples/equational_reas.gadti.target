newtype Place : type

newtype Nearby : type * type

newtype A

newtype B

newcons LocA : Place A

newcons LocB : Place B

newtype Boolean

newcons True : Boolean

newcons False : Boolean

external is_nearby : ∀a, b. Nearby (a, b) → Boolean

newcons Here : ∀b.Place b * Place b ⟶ Nearby (b, b)

newcons Transitive : ∀a, b, c.Nearby (a, b) * Nearby (b, c) ⟶
   Nearby (a, c)

newtype Ex1 : type

newcons Ex1 : ∀a, b[].(Place b, Nearby (a, b)) ⟶ Ex1 a

external wander : ∀a. Place a → ∃1:b.(Place b, Nearby (a, b))

newtype Meet : type * type

newcons Same : ∀b. Meet (b, b)

newcons NotSame : ∀a, b. Meet (a, b)

external compare : ∀a, b. Place a → Place b → Meet (a, b)

val walk : ∀a, b. Place a → Place b → Nearby (a, b)
