datatype Place : type

datatype Nearby : type * type

datatype A

datatype B

datacons LocA : Place A

datacons LocB : Place B

external is_nearby : ∀a, b. Nearby (a, b) → Bool

datacons Here : ∀b.Place b * Place b ⟶ Nearby (b, b)

datacons Transitive : ∀a, b, c.Nearby (a, b) * Nearby (b, c) ⟶
   Nearby (a, c)

external wander : ∀a. Place a → ∃b.(Place b, Nearby (a, b))

datatype Meet : type * type

datacons Same : ∀b. Meet (b, b)

datacons NotSame : ∀a, b. Meet (a, b)

external compare : ∀a, b. Place a → Place b → Meet (a, b)

val walk : ∀a, b. Place a → Place b → Nearby (a, b)
