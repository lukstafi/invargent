newtype Boolean
newtype List : type * num

newcons B_true : Boolean
newcons B_false : Boolean

newcons LNil : all a. List(a, 0)
newcons LCons : ∀n, a. a * List(a, n) ⟶ List(a, n+1)

newtype ShortList : type * num
newcons Shorter : ∀k, n, a) with k <= n:
  List(a, k) ⟶ Shorter(a, n)

newtype Bar
external f : Bar → Boolean

let rec filter =
  function LNil -> LNil
    | LCons (x, l) -> match f x with
          B_true -> match filter l with
              Shorter shl -> Shorter (LCons (x, shl))
	| B_false -> filter l
