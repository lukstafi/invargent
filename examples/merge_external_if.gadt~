newtype Bar
newtype List : nat

newcons LNil : List 0
newcons LCons : for all (n) : Bar * List(n) âŸ¶ List(n+1)

newtype Boolean

external compare : Bar -> Bar -> Boolean
external if : for all a : Boolean -> a -> a -> a

let rec merge =
  function LNil -> (fun l -> l)
    | LCons (a, l1) as l ->
	function LNil -> l
	  | LCons (b, l3) as l2 ->
	      if (compare a b)
		(LCons (a, merge l1 l2))
		(LCons (b, merge l l3))
