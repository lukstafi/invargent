datatype List : type

datacons N : ∀a. List a

datacons C : ∀a.a * List a ⟶ List a

datatype Zip1 : type * type

datacons Zero1 : ∀a. Zip1 (List a, List a)

datacons Succ1 : ∀a, b, c.Zip1 (List a, b) ⟶
   Zip1 (List (c → a), List c → b)

external zip_apply : ∀a, b. List (a → b) → List a → List b

val z1 : ∀a, b. a → Zip1 (a, b) → b
