newtype Term : type

newtype Integer

newtype Boolean

external plus : Integer → Integer → Integer

external is_zero : Integer → Boolean

external if_then : ∀a. Boolean → a → a → a

newcons Lit : Integer ⟶ Term Integer

newcons Plus : Term Integer * Term Integer ⟶ Term Integer

newcons IsZero : Term Integer ⟶ Term Boolean

newcons If : ∀a.Term Boolean * Term a * Term a ⟶ Term a

newcons Pair : ∀a, b.Term a * Term b ⟶ Term ((a, b))

newcons Fst : ∀a, b.Term ((a, b)) ⟶ Term a

newcons Snd : ∀a, b.Term ((a, b)) ⟶ Term b

val eval : ∀a. Term a → a
