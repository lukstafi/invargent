datatype EquLR : type * type * type
datacons EquL : ∀a, b. EquLR (a, a, b)
datacons EquR : ∀a, b. EquLR (a, b, b)
datatype Box : type
datacons Cons : ∀a. a ⟶ Box a
external let eq : ∀a. a → a → Bool = "(=)"

let vary e y =
  match e with
  | EquL, EquL -> eq y "c"
  | EquR, EquR -> Cons (if y then 5 else 7)
