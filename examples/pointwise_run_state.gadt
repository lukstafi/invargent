datatype State : type * type
datacons Bind :
  ∀a, b, s. State (s, a) * (a → State (s, b)) ⟶ State (s, b)
datacons Return : ∀a, s. a ⟶ State (s, a)
datacons Get : ∀s. State (s, s)
datacons Put : ∀s. s ⟶ State (s, ())

let rec run_state = fun s -> function
  | Return a -> (s, a)
  | Get -> (s, s)
  | Put u -> (u, ())
  | Bind (m, k) ->
    let s1, a1 = run_state s m in
    run_state s1 (k a1)
