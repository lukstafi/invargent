datatype Term : type

datatype Calc

external val mult : ∀i, j. Num i → Num j → ∃k.Num k

external val is_zero : ∀i. Num i → Bool

external val cond : ∀i, j. Bool → Num i → Num j → ∃k.Num k

datacons Lit : ∀k.Num k ⟶ Calc

datacons Plus : Calc * Calc ⟶ Calc

datacons Mult : Calc * Calc ⟶ Calc

datacons Cond : Term Bool * Calc * Calc ⟶ Calc

datacons IsZero : Calc ⟶ Term Bool

datacons If : ∀a.Term Bool * Term a * Term a ⟶ Term a

datacons Pair : ∀a, b.Term a * Term b ⟶ Term ((a, b))

datacons Fst : ∀a, b.Term ((a, b)) ⟶ Term a

datacons Snd : ∀a, b.Term ((a, b)) ⟶ Term b

val snd : ∀a, b. (b, a) → a

val calc : Calc → ∃n.Num n

val eval : ∀a. Term a → a
