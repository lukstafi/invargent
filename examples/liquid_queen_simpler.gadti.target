datatype Array : type * num

external val array_make : ∀n, a[0 ≤ n]. Num n → a → Array (a, n)

external val array_get :
   ∀n, k, a[0 ≤ k ∧ k + 1 ≤ n]. Array (a, n) → Num k → a

external val array_set :
   ∀n, k, a[0 ≤ k ∧ k + 1 ≤ n]. Array (a, n) → Num k → a → ()

external val array_length : ∀n, a[0 ≤ n]. Array (a, n) → Num n

external val n2i : ∀n. Num n → Int

external val equal : ∀a. a → a → Bool

external val leq : ∀a. a → a → Bool

external val print : String → ()

external val string_make : Int → String → String

external val abs : Int → Int

external val minus : Int → Int → Int

external val plus : Int → Int → Int

val print_row : ∀n. Num n → Int → ()

val print_queens : ∀k, n[n ≤ k]. Array (Int, k) → Num n → ()

val solved :
   ∀k, n[n + 1 ≤ k ∧ 0 ≤ n]. Array (Int, k) → Num n → Bool

val loop :
   ∀i, k, n[n + 1 ≤ i ∧ k ≤ i ∧ 0 ≤ n].
   Array (Int, i) → Num k → Num n → ()

val queens : ∀n[1 ≤ n]. Num n → ()
