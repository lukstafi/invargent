let
sortRange arr start n =
  let item _1_i = Array.get arr _1_i in
  let swap i j =
    let tmpj = item j in
    let tmpi = item i in Array.set arr i tmpj; Array.set arr j tmpi
  in
  let rec vecswap _3_i _2_j _1_n = 
		let _3_i_plus = _3_i + 1 in
		let _2_j_plus = _2_j + 1 in
		let _1_n_minus = _1_n - 1 in
		if _1_n = 0 then () else begin swap _3_i _2_j; vecswap _3_i_plus _2_j_plus _1_n_minus end
  in

  let insertSort start n =
    let limit = start + n in
		let start_plus = start + 1 in
    let rec outer i  =
			let i_plus = i + 1 in
      if limit < i_plus then ()
      else let rec inner j =
						 let j_minus = j - 1 in
             if j < start_plus then outer i_plus else 
								let ij_minus = item j_minus in 
									let ij = item j in  
									 if ij < ij_minus then (swap j j_minus; inner j_minus) else (outer i_plus)  
		       in inner i  
    in outer start_plus 
  in insertSort start n
(*let sorting _2_arr = (sortRange _2_arr 0 (Array.length _2_arr) ; _2_arr) in*)

let
sorted _1_arr =
  let len = Array.length _1_arr in
  let rec s v _5_i =
		let _5_i_plus = _5_i + 1 in
    let v' = Array.get _1_arr _5_i in
			if v' < v then false else 
				(if _5_i_plus = len then true else s v' _5_i_plus)
  in
  if len < 2 then true else s (Array.get _1_arr 0) 1
